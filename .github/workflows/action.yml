name: Update Eligibility Requirements For Rental Assistance Sheet

on:
  schedule:
    - cron: '0 1 1 * *'    # 1 AM UTC on the 1st of every month
  workflow_dispatch:      # manual trigger

permissions:
  contents: write

jobs:
  update-sheet:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create swap space
        run: |
          sudo fallocate -l 4G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile

      - name: Cache Ollama models directory
        uses: actions/cache@v3
        with:
          path: ~/.ollama
          key: ${{ runner.os }}-ollama-model-${{ hashFiles('**/action.yml') }}
          restore-keys: |
            ${{ runner.os }}-ollama-model-

      - name: Install Ollama & remove systemd artifacts
        run: |
          curl -fsSL https://ollama.com/install.sh | sh
          ollama pull gemma3:4b

          # Systemd workaround: disable service and unlink it completely
          sudo systemctl disable ollama.service || true
          sudo systemctl stop ollama.service || true
          sudo rm -f /etc/systemd/system/ollama.service
          sudo rm -f /etc/systemd/system/default.target.wants/ollama.service

      - name: Start Ollama server manually
        run: |
          nohup ollama serve --listen 127.0.0.1:11434 > ollama.log 2>&1 &

          echo "Waiting for Ollama API (timeout = 60s)..."
          for i in {1..30}; do
            if curl -s http://127.0.0.1:11434/v1/models >/dev/null; then
              echo "âœ” Ollama is ready"
              exit 0
            fi
            sleep 2
            echo -n "."
          done

          echo "Ollama failed to start in time"
          cat ollama.log
          exit 1

      - name: Create GCP credentials file
        run: echo '${{ secrets.GCP_CREDENTIALS }}' > credentials.json

      - name: Run updater script
        env:
          SHEET_ID: ${{ secrets.SHEET_ID }}
        run: python main.py

      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          git diff-index --quiet HEAD || git commit -m "Auto-update: $(date +'%Y-%m-%d')"
          git push origin HEAD:main
